<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Python on Fake瑞克的技术博客</title>
    <link>https://fake-rick.github.io/tags/python/</link>
    <description>Recent content in Python on Fake瑞克的技术博客</description>
    <image>
      <title>Fake瑞克的技术博客</title>
      <url>https://avatars.githubusercontent.com/u/44377946</url>
      <link>https://avatars.githubusercontent.com/u/44377946</link>
    </image>
    <generator>Hugo -- 0.131.0</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 21 Jul 2024 19:23:22 +0800</lastBuildDate>
    <atom:link href="https://fake-rick.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IsaacLab创建直接工作流RL环境</title>
      <link>https://fake-rick.github.io/posts/isaaclab%E5%88%9B%E5%BB%BA%E7%9B%B4%E6%8E%A5%E5%B7%A5%E4%BD%9C%E6%B5%81rl%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Sun, 21 Jul 2024 19:23:22 +0800</pubDate>
      <guid>https://fake-rick.github.io/posts/isaaclab%E5%88%9B%E5%BB%BA%E7%9B%B4%E6%8E%A5%E5%B7%A5%E4%BD%9C%E6%B5%81rl%E7%8E%AF%E5%A2%83/</guid>
      <description>原文地址：https://isaac-sim.github.io/IsaacLab/source/tutorials/03_envs/create_direct_rl_env.html
从环境中获取信息（观察） 获取joint（铰链）信息：位置和速度 joint会被包含在Articulation（关节）中，一个Articulation可能会包含1个或多个的joint对象，可以通过Articulation.find_joints()方法获得joint在当前Articulation中的索引（index）数据。
find_joints的返回值是这样的：tuple[list[joint索引], list[joint名字]]
find_joints的函数声明如下：
def find_joints( self, name_keys: str | Sequence[str], joint_subset: list[str] | None = None, preserve_order: bool = False ) -&amp;gt; tuple[list[int], list[str]] 在Articulation内部有一个属性私有变量_data: ArticulationData，该变量通过方法def data(self) -&amp;gt; ArticulationData获取，在ArticulationData中存放着几个关节重要的数据：位置ArticulationData._joint_pos，速度ArticulationData._joint_vel，加速度ArticulationData._joint_acc
在ArticulationData有几个@property装饰器函数，用于获取上述的三个属性，这样可以用过属性名的方式直接访问到这些数据。
下面介绍下这三个方法的返回值：
joint_pos返回torch.Size([num_instances, num_joints])
joint_vel返回torch.Size([num_instances, num_joints])
joint_acc返回torch.Size([num_instances, num_joints])
是时候讲解下DirectRLEnv(gym.Env)._get_observations(self) -&amp;gt; VecEnvObs方法了，该方法带有@abstractmethod被定义成抽象方法，所以我们在继承DirectRLEnv类后必须在自己的类中实现_get_observations方法。
我们在_get_observations方法中计算并返回观测值，这会用到上面提到的ArticulationData以及如何通过joint索引从中获取实际数据。
在cartpole_env.py的代码中有如下实现：
def _get_observations(self) -&amp;gt; torch.Dict[str, torch.Tensor | torch.Dict[str, torch.Tensor]]: obs = torch.cat( ( self.joint_pos[:, self._pole_dof_idx[0]].unsqueeze(dim=1), self.joint_vel[:, self._pole_dof_idx[0]].unsqueeze(dim=1), self.joint_pos[:, self._cart_dof_idx[0]].unsqueeze(dim=1), self.joint_vel[:, self._cart_dof_idx[0]].unsqueeze(dim=1), ), dim=-1, ) observations = {&amp;#34;policy&amp;#34;: obs} return observations 上述代码中的_pole_dof_idx里边存放的是杆子的joint对应的索引数据，_cart_dof_idx存放的是小车的joint对应的索引数据，这里介绍下获取杆子位置的代码，获取杆子速度和小车位置和速度的代码都一样。</description>
    </item>
    <item>
      <title>Park变换</title>
      <link>https://fake-rick.github.io/posts/park%E5%8F%98%E6%8D%A2/</link>
      <pubDate>Thu, 18 Jul 2024 10:55:56 +0800</pubDate>
      <guid>https://fake-rick.github.io/posts/park%E5%8F%98%E6%8D%A2/</guid>
      <description>Park变换 Park变换的目的是将Clark变换后的αβ坐标系转换成d,q旋转坐标系。d轴方向与转子磁链方向重合，所以d轴也叫直轴。q轴方向与转子磁链方向垂直，所以q轴又叫交轴。
旋转矩阵是什么？ ⊿abo： $ob = oa\times \cos(\theta)$
已知：bc = ad
$$ \because \angle pad + \angle pab = 90°\\ \angle oab + \angle pab = 90°\\ \therefore \angle oab = \angle pad\\ \angle aob = \angle apd = \angle \theta $$ ⊿adp： $ad = ap \times \sin(\theta)$
$$ \because oc = ob + bc \\ \therefore oc = oa \times \cos(\theta) + ap \times \sin(\theta) $$ 所以向量p到d轴的投影为：$oa \times \cos(\theta) + ap \times \sin(\theta)$</description>
    </item>
    <item>
      <title>Clark变换矩阵</title>
      <link>https://fake-rick.github.io/posts/clark%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/</link>
      <pubDate>Thu, 18 Jul 2024 10:09:12 +0800</pubDate>
      <guid>https://fake-rick.github.io/posts/clark%E5%8F%98%E6%8D%A2%E7%9F%A9%E9%98%B5/</guid>
      <description>什么是Clark变换？ Clark变换将三相系统（在 abc 坐标系中）的时域分量转换为正交静止坐标系 (αβ) 中的两个分量。
利用基变换来实现三相坐标系(abc)到两相正交坐标系(αβ) 已知三相坐标系的相位依次相差120°且αβ为正交坐标系。 将α轴与a轴重叠，将向量a沿着原点O的方向延长做一条辅助线，∠boe和∠coe等于60°。
计算向量b和向量c到α轴的投影长度： $$ be = \sin(∠boe) = \sin(60°) = \frac{\sqrt{3}}{2} \\ ce = -\sin(∠coe) = -\sin(60°) = -\frac{\sqrt{3}}{2} $$ 因为向量c在α轴的下方所以投影为负
计算向量b和向量c到β轴的投影长度： $$ bg = -\cos(∠boe) = -\cos(60°) = -\frac{1}{2} \\ ch = -\cos(∠coe) = -\cos(60°) = -\frac{1}{2} $$ 因为向量b和向量c在β轴的左侧所以投影为负
组合出基变换矩阵 根据上面的投影可以得到a,b,c三个向量的坐标：向量 $a=[1, 0]$，向量$b=[-\frac{1}{2},\frac{\sqrt{3}}{2}] $，向量 $c=[-\frac{1}{2},-\frac{\sqrt{3}}{2}] $
所以基变换矩阵为：
$$ A = \left[ \begin{matrix} 1 &amp; -\frac{1}{2} &amp; -\frac{1}{2} \\ 0 &amp; \frac{\sqrt{3}}{2}&amp; -\frac{\sqrt{3}}{2} \end{matrix} \right] $$ 坐标转换公式为：</description>
    </item>
  </channel>
</rss>
